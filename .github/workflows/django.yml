name: Django CI

on:
  push:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Restore Python package cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}

      - name: Build Docker image
        run: |
          docker buildx \
          build --platform linux/amd64 \
          -t django:test \
          --build-arg SECRET_KEY='${{ secrets.SECRET_KEY }}' \
          --build-arg NCP_SECRET_KEY='${{ secrets.NCP_SECRET_KEY }}' \
          --build-arg NCP_ACCESS_KEY='${{ secrets.NCP_ACCESS_KEY }}' \
          .

      - name: Run Pytest in Docker container
        run: |
          docker run -d --name djangotest django:test tail -f /dev/null
          docker exec djangotest pytest --cov --cov-report=xml
          docker cp djangotest:/beside_project/coverage.xml ${GITHUB_WORKSPACE}/coverage.xml
          docker rm -f djangotest

      - name: Save Python package cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/poetry.lock') }}

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          file: ./coverage.xml
          fail_ci_if_error: true
          verbose: true

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: SSH to Naver Cloud
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.NAVER_CLOUD_HOST }}
          username: ${{ secrets.NAVER_CLOUD_USERNAME }}
          password: ${{ secrets.NAVER_CLOUD_PASSWORD }}
          port: ${{ secrets.NAVER_CLOUD_PORT }}
          script: |
            cd beside_project
            git pull origin main
            docker-compose up --build --force-recreate -d
            docker image prune -f
